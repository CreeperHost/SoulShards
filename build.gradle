buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = "${project.mc_version}-${project.mod_version}"
group = 'net.creeperhost.soulshardsrespawn' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'soulshards'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: "${project.mc_version}"
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                soulshards {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                soulshards {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'soulshards', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                soulshards {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name "CreeperHost"
        url 'https://maven.creeperhost.net'
    }
    maven {
        name "Architectury"
        url "https://maven.architectury.dev/"
    }

     maven {
         name "JEI"
         url "https://dvs1.progwml6.com/files/maven"
     }
//     maven {
//         name "Hwyla"
//         url 'https://maven.tehnut.info'
//     }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"
    implementation fg.deobf("dev.architectury:architectury-forge:${rootProject.architectury_version}")
    implementation fg.deobf("net.creeperhost:polylib-forge:${rootProject.polylib_version}")

    // compileOnly fg.deobf('mcp.mobius.waila:Hwyla:1.10.11-B78_1.16.2:api')
    // runtimeOnly fg.deobf('mcp.mobius.waila:Hwyla:1.10.11-B78_1.16.2')


    compileOnly fg.deobf("mezz.jei:jei-1.19-common-api:${project.jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-1.19-forge-api:${project.jei_version}")
//    runtimeOnly fg.deobf("mezz.jei:jei-1.19-forge:${project.jei_version}")

}

jar {
    manifest {
        attributes([
            "Specification-Title": "soulshards",
            "Specification-Vendor": "CreeperHost",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"CreeperHost",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
}
